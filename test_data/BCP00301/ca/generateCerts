#!/bin/bash

DOMAIN=$1
if [$DOMAIN == ""]; then
    echo "Expected domain argument"
    exit 1
fi

rm -f intermediate/private/ecdsa.$DOMAIN.key.pem
rm -f intermediate/private/$DOMAIN.key.pem
rm intermediate/csr/ecdsa.$DOMAIN.csr.pem
rm intermediate/csr/$DOMAIN.csr.pem
rm intermediate/certs/ecdsa.$DOMAIN.cert.pem
rm intermediate/certs/$DOMAIN.cert.pem

# Create ECDSA key
openssl ecparam -name secp256r1 -genkey -noout -out intermediate/private/ecdsa.$DOMAIN.key.pem
chmod 400 intermediate/private/ecdsa.$DOMAIN.key.pem

# Create RSA Key
openssl genrsa -out intermediate/private/rsa.$DOMAIN.key.pem 2048
chmod 400 intermediate/private/$DOMAIN.key.pem

# Create ECDSA CSR
export SAN=$DOMAIN
openssl req -config intermediate/openssl.cnf -key intermediate/private/ecdsa.$DOMAIN.key.pem -new -sha256 -out intermediate/csr/ecdsa.$DOMAIN.csr.pem -subj "/C=GB/ST=England/O=NMOS Testing Ltd/CN=$DOMAIN"

# Create RSA CSR
export SAN=$DOMAIN
openssl req -config intermediate/openssl.cnf -key intermediate/private/rsa.$DOMAIN.key.pem -new -sha256 -out intermediate/csr/rsa.$DOMAIN.csr.pem -subj "/C=GB/ST=England/O=NMOS Testing Ltd/CN=$DOMAIN"

# Sign ECDSA CSR
export SAN=$DOMAIN
openssl ca -batch -config intermediate/openssl.cnf -extensions server_cert -days 18250 -notext -md sha256 -in intermediate/csr/ecdsa.$DOMAIN.csr.pem -out intermediate/certs/ecdsa.$DOMAIN.cert.pem

# Sign RSA CSR
export SAN=$DOMAIN
openssl ca -batch -config intermediate/openssl.cnf -extensions server_cert -days 18250 -notext -md sha256 -in intermediate/csr/rsa.$DOMAIN.csr.pem -out intermediate/certs/rsa.$DOMAIN.cert.pem
